name: Run PiT
on:
  workflow_dispatch:
   inputs:
      version:
        description: 'Version'
        required: false
        type: string
      starters:
        description: 'Starters to run, separated by comma'
        required: true
        default: 'control-center'
        type: string
      skipcurrent:
        description: 'Skip running tests in current version'
        required: false
        type: boolean
        default: false
      skipdev:
        description: 'Skip running tests in dev mode'
        required: false
        type: boolean
        default: false
      debug:
        description: 'Be verbose when running PiT steps'
        required: false
        type: boolean
        default: false
  push:
jobs:
  run:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        options: --privileged --shm-size=2g
    steps:
      - name: Check out branch
        uses: actions/checkout@v4
      - if: ${{ env.ACT }}
        name: ACT - install dependencies
        run: |
          echo "export PATH='$PATH'" > path.sh
          apt-get update
          apt-get install -y vim iputils-ping sudo unzip wget jq curl
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.0'
      - name: Set up Helm
        uses: azure/setup-helm@v3.5
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
        with:
          install_only: false
      - name: Run PiT
        env:
          CC_KEY: ${{ secrets.CC_KEY }}
          CC_CERT: ${{ secrets.CC_CERT }}
          GHTK: ${{ secrets.GHTK }}
        run: |
          [ -n "${{ inputs.skipcurrent }}" ] && A="$A --skip-current"
          [ -n "${{ inputs.skipdev }}" ] && A="$A --skip-dev"
          [ -n "${{ inputs.debug }}" ] && A="$A --debug"
          [ -n "${{ inputs.version }}" ] && A="$A --version=${{ inputs.version }}"
          [ -n "${{ inputs.starters }}" ] && A="$A --starters=${{ inputs.starters }}" || A="$A --starters=control-center"
          echo ./scripts/pit/run.sh $A
          ./scripts/pit/run.sh $A
      - if: ${{ always()}}
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: tmp/**/*.out
          if-no-files-found: ignore
          retention-days: 2



